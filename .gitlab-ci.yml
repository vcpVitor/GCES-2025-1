stages:
  - build
  - test
  - lint

build_api:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t api:latest -f Dockerfile.dev.api .
    - docker save api:latest > api.tar
  artifacts:
    paths:
      - api.tar

build_www:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t www:latest -f Dockerfile.dev.www .
    - docker save www:latest > www.tar
  artifacts:
    paths:
      - www.tar

test_api:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker load < api.tar
    - docker run api:latest python manage.py test
  dependencies:
    - build_api

test_www:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker load < www.tar
    - docker run www:latest npm test
  dependencies:
    - build_www

lint_api:
  stage: lint
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker load < api.tar
    - docker run api:latest flake8
  dependencies:
    - build_api

lint_www:
  stage: lint
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker load < www.tar
    - docker run www:latest npm run lint
  dependencies:
    - build_www
